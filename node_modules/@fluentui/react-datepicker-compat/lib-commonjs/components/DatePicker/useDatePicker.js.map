{"version":3,"sources":["useDatePicker.js"],"sourcesContent":["import * as React from 'react';\nimport { ArrowDown, Enter, Escape } from '@fluentui/keyboard-keys';\nimport { Calendar, compareDatePart, DayOfWeek, FirstWeekOfYear } from '@fluentui/react-calendar-compat';\nimport { CalendarMonthRegular } from '@fluentui/react-icons';\nimport { defaultDatePickerStrings } from './defaults';\nimport { Input } from '@fluentui/react-input';\nimport { mergeCallbacks, useControllableState, useEventCallback, useId, useMergedRefs, useOnClickOutside, useOnScrollOutside, slot } from '@fluentui/react-utilities';\nimport { useFieldContext_unstable as useFieldContext } from '@fluentui/react-field';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useModalAttributes } from '@fluentui/react-tabster';\nimport { usePopupPositioning } from '../../utils/usePopupPositioning';\nfunction isDateOutOfBounds(date, minDate, maxDate) {\n    return !!minDate && compareDatePart(minDate, date) > 0 || !!maxDate && compareDatePart(maxDate, date) < 0;\n}\nfunction useFocusLogic() {\n    const inputRef = React.useRef(null);\n    const preventFocusOpeningPicker = React.useRef(false);\n    const focus = React.useCallback(()=>{\n        var _inputRef_current_focus, _inputRef_current;\n        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : (_inputRef_current_focus = _inputRef_current.focus) === null || _inputRef_current_focus === void 0 ? void 0 : _inputRef_current_focus.call(_inputRef_current);\n    }, []);\n    const preventNextFocusOpeningPicker = React.useCallback(()=>{\n        preventFocusOpeningPicker.current = true;\n    }, []);\n    return [\n        focus,\n        inputRef,\n        preventFocusOpeningPicker,\n        preventNextFocusOpeningPicker\n    ];\n}\nfunction usePopupVisibility(props) {\n    const [open, setOpen] = useControllableState({\n        initialState: false,\n        defaultState: props.defaultOpen,\n        state: props.open\n    });\n    const isMounted = React.useRef(false);\n    React.useEffect(()=>{\n        if (isMounted.current && !open) {\n            var // If DatePicker's menu (Calendar) is closed, run onAfterMenuDismiss\n            _props_onOpenChange;\n            (_props_onOpenChange = props.onOpenChange) === null || _props_onOpenChange === void 0 ? void 0 : _props_onOpenChange.call(props, false);\n        }\n        isMounted.current = true;\n    }, // Should only run on allowTextInput or open change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        props.allowTextInput,\n        open\n    ]);\n    return [\n        open,\n        setOpen\n    ];\n}\nfunction useSelectedDate({ formatDate, onSelectDate, value }) {\n    const [selectedDate, setSelectedDateState] = useControllableState({\n        initialState: null,\n        state: value\n    });\n    const [formattedDate, setFormattedDate] = React.useState(()=>value && formatDate ? formatDate(value) : '');\n    const setSelectedDate = (newDate)=>{\n        onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(newDate);\n        setSelectedDateState(newDate);\n        setFormattedDate(newDate && formatDate ? formatDate(newDate) : '');\n    };\n    React.useEffect(()=>{\n        setFormattedDate(value && formatDate ? formatDate(value) : '');\n    }, [\n        formatDate,\n        value\n    ]);\n    return [\n        selectedDate,\n        formattedDate,\n        setSelectedDate,\n        setFormattedDate\n    ];\n}\nconst defaultFormatDate = (date)=>date ? date.toDateString() : '';\nconst defaultParseDateFromString = (dateStr)=>{\n    const date = Date.parse(dateStr);\n    return date ? new Date(date) : null;\n};\n/**\n * Create the state required to render DatePicker.\n *\n * The returned state can be modified with hooks such as useDatePickerStyles_unstable,\n * before being passed to renderDatePicker_unstable.\n *\n * @param props - props from this instance of DatePicker\n * @param ref - reference to root Input slot\n */ export const useDatePicker_unstable = (props, ref)=>{\n    const { allowTextInput = false, allFocusable = false, borderless = false, dateTimeFormatter, defaultOpen = false, disableAutoFocus = true, firstDayOfWeek = DayOfWeek.Sunday, firstWeekOfYear = FirstWeekOfYear.FirstDay, formatDate = defaultFormatDate, highlightCurrentMonth = false, highlightSelectedMonth = false, initialPickerDate: initialPickerDateProp, inlinePopup = false, isMonthPickerVisible = true, maxDate, minDate, mountNode, onOpenChange, onSelectDate: onUserSelectDate, openOnClick = true, onValidationResult, parseDateFromString = defaultParseDateFromString, showCloseButton = false, showGoToToday = true, showMonthPickerAsOverlay = false, showWeekNumbers = false, strings = defaultDatePickerStrings, today, underlined = false, value, ...restOfProps } = props;\n    const initialPickerDate = React.useMemo(()=>initialPickerDateProp !== null && initialPickerDateProp !== void 0 ? initialPickerDateProp : new Date(), [\n        initialPickerDateProp\n    ]);\n    const calendar = React.useRef(null);\n    const [focus, rootRef, preventFocusOpeningPicker, preventNextFocusOpeningPicker] = useFocusLogic();\n    const [selectedDate, formattedDate, setSelectedDate, setFormattedDate] = useSelectedDate({\n        formatDate,\n        onSelectDate: onUserSelectDate,\n        value\n    });\n    const [open, setOpenState] = usePopupVisibility(props);\n    const fieldContext = useFieldContext();\n    var _fieldContext_required;\n    const required = (_fieldContext_required = fieldContext === null || fieldContext === void 0 ? void 0 : fieldContext.required) !== null && _fieldContext_required !== void 0 ? _fieldContext_required : props.required;\n    const defaultId = useId('datePicker-input');\n    const popupSurfaceId = useId('datePicker-popupSurface');\n    const validateTextInput = React.useCallback((date = null)=>{\n        let error;\n        if (allowTextInput) {\n            if (formattedDate || date) {\n                // Don't parse if the selected date has the same formatted string as what we're about to parse.\n                // The formatted string might be ambiguous (ex: \"1/2/3\" or \"New Year Eve\") and the parser might\n                // not be able to come up with the exact same date.\n                if (selectedDate && formatDate && formatDate(date !== null && date !== void 0 ? date : selectedDate) === formattedDate) {\n                    return;\n                }\n                date = date || parseDateFromString(formattedDate);\n                // Check if date is null or date is an invalid date\n                if (!date || isNaN(date.getTime())) {\n                    // Reset input if formatting is available\n                    setSelectedDate(selectedDate);\n                    error = 'invalid-input';\n                } else {\n                    if (isDateOutOfBounds(date, minDate, maxDate)) {\n                        error = 'out-of-bounds';\n                    } else {\n                        setSelectedDate(date);\n                    }\n                }\n            } else {\n                if (required) {\n                    error = 'required-input';\n                }\n                onUserSelectDate === null || onUserSelectDate === void 0 ? void 0 : onUserSelectDate(date);\n            }\n        } else if (required && !formattedDate) {\n            error = 'required-input';\n        }\n        onValidationResult === null || onValidationResult === void 0 ? void 0 : onValidationResult({\n            error\n        });\n    }, [\n        allowTextInput,\n        formatDate,\n        formattedDate,\n        maxDate,\n        minDate,\n        onUserSelectDate,\n        onValidationResult,\n        parseDateFromString,\n        required,\n        selectedDate,\n        setSelectedDate\n    ]);\n    const setOpen = React.useCallback((newState)=>{\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(newState);\n        setOpenState(newState);\n        if (!open && !props.disabled) {\n            focus();\n        }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        focus,\n        onOpenChange,\n        props.disabled,\n        setOpenState\n    ]);\n    const dismissDatePickerPopup = React.useCallback((newlySelectedDate)=>{\n        if (open) {\n            setOpen(false);\n            validateTextInput(newlySelectedDate);\n            if (!allowTextInput && newlySelectedDate) {\n                setSelectedDate(newlySelectedDate);\n            }\n        }\n    }, [\n        allowTextInput,\n        open,\n        setOpen,\n        setSelectedDate,\n        validateTextInput\n    ]);\n    const showDatePickerPopup = React.useCallback(()=>{\n        if (!open) {\n            preventNextFocusOpeningPicker();\n            setOpen(true);\n        }\n    }, [\n        open,\n        preventNextFocusOpeningPicker,\n        setOpen\n    ]);\n    /**\n   * Callback for closing the calendar callout\n   */ const calendarDismissed = React.useCallback((newlySelectedDate)=>{\n        preventNextFocusOpeningPicker();\n        dismissDatePickerPopup(newlySelectedDate);\n    }, [\n        dismissDatePickerPopup,\n        preventNextFocusOpeningPicker\n    ]);\n    const onInputChange = React.useCallback((ev, data)=>{\n        const { value: newValue } = data;\n        if (allowTextInput) {\n            if (open) {\n                dismissDatePickerPopup();\n            }\n            setFormattedDate(newValue);\n        }\n    }, [\n        allowTextInput,\n        dismissDatePickerPopup,\n        open,\n        setFormattedDate\n    ]);\n    const onInputBlur = React.useCallback(()=>{\n        validateTextInput();\n    }, [\n        validateTextInput\n    ]);\n    const onInputKeyDown = React.useCallback((ev)=>{\n        switch(ev.key){\n            case Enter:\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (!open) {\n                    validateTextInput();\n                    showDatePickerPopup();\n                } else {\n                    // When DatePicker allows input date string directly,\n                    // it is expected to hit another enter to close the popup\n                    if (props.allowTextInput) {\n                        dismissDatePickerPopup();\n                    }\n                }\n                break;\n            case Escape:\n                ev.stopPropagation();\n                ev.preventDefault();\n                if (open) {\n                    calendarDismissed();\n                }\n                break;\n            case ArrowDown:\n                ev.preventDefault();\n                if (ev.altKey && !open) {\n                    showDatePickerPopup();\n                }\n                break;\n            default:\n                break;\n        }\n    }, [\n        calendarDismissed,\n        dismissDatePickerPopup,\n        open,\n        props.allowTextInput,\n        showDatePickerPopup,\n        validateTextInput\n    ]);\n    const onInputFocus = React.useCallback(()=>{\n        if (disableAutoFocus) {\n            return;\n        }\n        if (!allowTextInput) {\n            if (!preventFocusOpeningPicker.current) {\n                showDatePickerPopup();\n            }\n            preventFocusOpeningPicker.current = false;\n        }\n    }, [\n        allowTextInput,\n        disableAutoFocus,\n        preventFocusOpeningPicker,\n        showDatePickerPopup\n    ]);\n    const onInputClick = React.useCallback(()=>{\n        // default openOnClick to !props.disableAutoFocus for legacy support of disableAutoFocus behavior\n        if ((props.openOnClick || !props.disableAutoFocus) && !open && !props.disabled) {\n            showDatePickerPopup();\n            return;\n        }\n        if (allowTextInput) {\n            dismissDatePickerPopup();\n        }\n    }, [\n        allowTextInput,\n        dismissDatePickerPopup,\n        open,\n        props.disabled,\n        props.disableAutoFocus,\n        props.openOnClick,\n        showDatePickerPopup\n    ]);\n    const onIconClick = (ev)=>{\n        ev.stopPropagation();\n        if (!open && !props.disabled) {\n            showDatePickerPopup();\n        } else if (props.allowTextInput) {\n            dismissDatePickerPopup();\n        }\n    };\n    const inputAppearance = underlined ? 'underline' : borderless ? 'filled-lighter' : 'outline';\n    const [triggerWrapperRef, popupRef] = usePopupPositioning(props);\n    const inputRoot = slot.always(props.root, {\n        defaultProps: {\n            'aria-owns': open ? popupSurfaceId : undefined,\n            ref: triggerWrapperRef\n        },\n        elementType: 'span'\n    });\n    inputRoot.ref = useMergedRefs(inputRoot.ref, triggerWrapperRef);\n    const input = slot.always(props.input, {\n        elementType: 'input'\n    });\n    input.ref = useMergedRefs(input.ref, ref, rootRef);\n    // Props to create a semantic but non-focusable button on the element with the click-to-open handler\n    // Used for voice control and touch screen reader accessibility\n    const inputLabelledBy = props['aria-labelledby'];\n    var _props_id;\n    const inputId = (_props_id = props.id) !== null && _props_id !== void 0 ? _props_id : defaultId;\n    const iconA11yProps = React.useMemo(()=>({\n            role: 'button',\n            'aria-expanded': open,\n            'aria-labelledby': inputLabelledBy !== null && inputLabelledBy !== void 0 ? inputLabelledBy : inputId\n        }), [\n        open,\n        inputLabelledBy,\n        inputId\n    ]);\n    const contentAfter = slot.always(props.contentAfter || {}, {\n        defaultProps: {\n            children: /*#__PURE__*/ React.createElement(CalendarMonthRegular, null),\n            ...iconA11yProps\n        },\n        elementType: 'span'\n    });\n    contentAfter.onClick = useEventCallback(mergeCallbacks(contentAfter.onClick, onIconClick));\n    const root = slot.always(restOfProps, {\n        defaultProps: {\n            appearance: inputAppearance,\n            'aria-controls': open ? popupSurfaceId : undefined,\n            'aria-expanded': open,\n            'aria-haspopup': 'dialog',\n            readOnly: !allowTextInput,\n            role: 'combobox',\n            id: inputId\n        },\n        elementType: Input\n    });\n    root.root = inputRoot;\n    root.input = input;\n    root.contentAfter = contentAfter;\n    root.onChange = useEventCallback(mergeCallbacks(root.onChange, onInputChange));\n    root.onBlur = useEventCallback(mergeCallbacks(root.onBlur, onInputBlur));\n    root.onKeyDown = useEventCallback(mergeCallbacks(root.onKeyDown, onInputKeyDown));\n    root.onFocus = useEventCallback(mergeCallbacks(root.onFocus, onInputFocus));\n    root.onClick = useEventCallback(mergeCallbacks(root.onClick, onInputClick));\n    const { modalAttributes } = useModalAttributes({\n        trapFocus: true,\n        alwaysFocusable: true,\n        legacyTrapFocus: false\n    });\n    const popupSurface = open ? slot.optional(props.popupSurface, {\n        renderByDefault: true,\n        defaultProps: {\n            'aria-label': 'Calendar',\n            'aria-modal': true,\n            id: popupSurfaceId,\n            role: 'dialog',\n            ref: popupRef,\n            ...modalAttributes\n        },\n        elementType: 'div'\n    }) : undefined;\n    const { targetDocument } = useFluent();\n    useOnClickOutside({\n        element: targetDocument,\n        callback: (ev)=>dismissDatePickerPopup(),\n        refs: [\n            triggerWrapperRef,\n            popupRef\n        ],\n        disabled: !open\n    });\n    useOnScrollOutside({\n        element: targetDocument,\n        callback: (ev)=>dismissDatePickerPopup(),\n        refs: [\n            triggerWrapperRef,\n            popupRef\n        ],\n        disabled: !open\n    }); // When the popup is opened, focus should go to the calendar.\n    // In v8 this was done by focusing after the callout was positioned, but in v9 this can be simulated by using a\n    // useEffect hook.\n    React.useEffect(()=>{\n        if (open && !props.disabled && calendar.current) {\n            calendar.current.focus();\n        }\n    }, [\n        disableAutoFocus,\n        open,\n        props.disabled\n    ]);\n    const calendarShorthand = slot.always(props.calendar, {\n        defaultProps: {\n            allFocusable,\n            componentRef: calendar,\n            dateTimeFormatter,\n            firstDayOfWeek,\n            firstWeekOfYear,\n            highlightCurrentMonth,\n            highlightSelectedMonth,\n            isMonthPickerVisible,\n            maxDate,\n            minDate,\n            showCloseButton,\n            showGoToToday,\n            showMonthPickerAsOverlay,\n            showWeekNumbers,\n            strings,\n            today,\n            value: selectedDate || initialPickerDate\n        },\n        elementType: Calendar\n    });\n    calendarShorthand.onDismiss = useEventCallback(mergeCallbacks(calendarShorthand.onDismiss, calendarDismissed));\n    calendarShorthand.onSelectDate = useEventCallback(mergeCallbacks(calendarShorthand.onSelectDate, calendarDismissed));\n    const state = {\n        disabled: !!props.disabled,\n        inlinePopup,\n        components: {\n            root: Input,\n            calendar: Calendar,\n            popupSurface: 'div'\n        },\n        calendar: calendarShorthand,\n        mountNode,\n        root,\n        popupSurface\n    };\n    state.root.value = formattedDate;\n    return state;\n};\n"],"names":["useDatePicker_unstable","isDateOutOfBounds","date","minDate","maxDate","compareDatePart","useFocusLogic","inputRef","React","useRef","preventFocusOpeningPicker","focus","useCallback","_inputRef_current_focus","_inputRef_current","current","call","preventNextFocusOpeningPicker","usePopupVisibility","props","open","setOpen","useControllableState","initialState","defaultState","defaultOpen","state","isMounted","useEffect","_props_onOpenChange","onOpenChange","allowTextInput","useSelectedDate","formatDate","onSelectDate","value","selectedDate","setSelectedDateState","formattedDate","setFormattedDate","useState","setSelectedDate","newDate","defaultFormatDate","toDateString","defaultParseDateFromString","dateStr","Date","parse","ref","allFocusable","borderless","dateTimeFormatter","disableAutoFocus","firstDayOfWeek","DayOfWeek","Sunday","firstWeekOfYear","FirstWeekOfYear","FirstDay","highlightCurrentMonth","highlightSelectedMonth","initialPickerDate","initialPickerDateProp","inlinePopup","isMonthPickerVisible","mountNode","onUserSelectDate","openOnClick","onValidationResult","parseDateFromString","showCloseButton","showGoToToday","showMonthPickerAsOverlay","showWeekNumbers","strings","defaultDatePickerStrings","today","underlined","restOfProps","useMemo","calendar","rootRef","setOpenState","fieldContext","useFieldContext","_fieldContext_required","required","defaultId","useId","popupSurfaceId","validateTextInput","error","isNaN","getTime","newState","disabled","dismissDatePickerPopup","newlySelectedDate","showDatePickerPopup","calendarDismissed","onInputChange","ev","data","newValue","onInputBlur","onInputKeyDown","key","Enter","preventDefault","stopPropagation","Escape","ArrowDown","altKey","onInputFocus","onInputClick","onIconClick","inputAppearance","triggerWrapperRef","popupRef","usePopupPositioning","inputRoot","slot","always","root","defaultProps","undefined","elementType","useMergedRefs","input","inputLabelledBy","_props_id","inputId","id","iconA11yProps","role","contentAfter","children","createElement","CalendarMonthRegular","onClick","useEventCallback","mergeCallbacks","appearance","readOnly","Input","onChange","onBlur","onKeyDown","onFocus","modalAttributes","useModalAttributes","trapFocus","alwaysFocusable","legacyTrapFocus","popupSurface","optional","renderByDefault","targetDocument","useFluent","useOnClickOutside","element","callback","refs","useOnScrollOutside","calendarShorthand","componentRef","Calendar","onDismiss","components"],"mappings":"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"}