{"version":3,"sources":["CalendarMonthHeaderRow.js"],"sourcesContent":["import * as React from 'react';\nimport { mergeClasses } from '@griffel/react';\nimport { DAYS_IN_WEEK } from '../../utils';\n/**\n * @internal\n */ export const CalendarMonthHeaderRow = (props)=>{\n    const { showWeekNumbers, strings, firstDayOfWeek, allFocusable, weeksToShow, weeks, classNames } = props;\n    const dayLabels = strings.shortDays.slice();\n    let firstOfMonthIndex = -1;\n    const firstWeekOfMonth = weeks[1];\n    for(let i = 0; i < weeks[1].length; i++){\n        if (firstWeekOfMonth[i].originalDate.getDate() === 1) {\n            firstOfMonthIndex = i;\n            break;\n        }\n    }\n    if (weeksToShow === 1 && firstOfMonthIndex >= 0) {\n        // if we only show one week, replace the header with short month name\n        const firstOfMonthIndexOffset = (firstOfMonthIndex + firstDayOfWeek) % DAYS_IN_WEEK;\n        dayLabels[firstOfMonthIndexOffset] = strings.shortMonths[weeks[1][firstOfMonthIndex].originalDate.getMonth()];\n    }\n    return /*#__PURE__*/ React.createElement(\"tr\", null, showWeekNumbers && /*#__PURE__*/ React.createElement(\"th\", {\n        className: classNames.dayCell\n    }), dayLabels.map((val, index)=>{\n        const i = (index + firstDayOfWeek) % DAYS_IN_WEEK;\n        const label = strings.days[i];\n        return /*#__PURE__*/ React.createElement(\"th\", {\n            className: mergeClasses(classNames.dayCell, classNames.weekDayLabelCell),\n            scope: \"col\",\n            key: dayLabels[i] + ' ' + index,\n            title: label,\n            \"aria-label\": label,\n            tabIndex: allFocusable ? 0 : undefined\n        }, dayLabels[i]);\n    }));\n};\n"],"names":["CalendarMonthHeaderRow","props","showWeekNumbers","strings","firstDayOfWeek","allFocusable","weeksToShow","weeks","classNames","dayLabels","shortDays","slice","firstOfMonthIndex","firstWeekOfMonth","i","length","originalDate","getDate","firstOfMonthIndexOffset","DAYS_IN_WEEK","shortMonths","getMonth","React","createElement","className","dayCell","map","val","index","label","days","mergeClasses","weekDayLabelCell","scope","key","title","tabIndex","undefined"],"mappings":";;;;+BAKiBA;;;eAAAA;;;;iEALM;wBACM;uBACA;AAGlB,MAAMA,yBAAyB,CAACC;IACvC,MAAM,EAAEC,eAAe,EAAEC,OAAO,EAAEC,cAAc,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,UAAU,EAAE,GAAGP;IACnG,MAAMQ,YAAYN,QAAQO,SAAS,CAACC,KAAK;IACzC,IAAIC,oBAAoB,CAAC;IACzB,MAAMC,mBAAmBN,KAAK,CAAC,EAAE;IACjC,IAAI,IAAIO,IAAI,GAAGA,IAAIP,KAAK,CAAC,EAAE,CAACQ,MAAM,EAAED,IAAI;QACpC,IAAID,gBAAgB,CAACC,EAAE,CAACE,YAAY,CAACC,OAAO,OAAO,GAAG;YAClDL,oBAAoBE;YACpB;QACJ;IACJ;IACA,IAAIR,gBAAgB,KAAKM,qBAAqB,GAAG;QAC7C,qEAAqE;QACrE,MAAMM,0BAA0B,AAACN,CAAAA,oBAAoBR,cAAa,IAAKe,mBAAY;QACnFV,SAAS,CAACS,wBAAwB,GAAGf,QAAQiB,WAAW,CAACb,KAAK,CAAC,EAAE,CAACK,kBAAkB,CAACI,YAAY,CAACK,QAAQ,GAAG;IACjH;IACA,OAAO,WAAW,GAAGC,OAAMC,aAAa,CAAC,MAAM,MAAMrB,mBAAmB,WAAW,GAAGoB,OAAMC,aAAa,CAAC,MAAM;QAC5GC,WAAWhB,WAAWiB,OAAO;IACjC,IAAIhB,UAAUiB,GAAG,CAAC,CAACC,KAAKC;QACpB,MAAMd,IAAI,AAACc,CAAAA,QAAQxB,cAAa,IAAKe,mBAAY;QACjD,MAAMU,QAAQ1B,QAAQ2B,IAAI,CAAChB,EAAE;QAC7B,OAAO,WAAW,GAAGQ,OAAMC,aAAa,CAAC,MAAM;YAC3CC,WAAWO,IAAAA,oBAAY,EAACvB,WAAWiB,OAAO,EAAEjB,WAAWwB,gBAAgB;YACvEC,OAAO;YACPC,KAAKzB,SAAS,CAACK,EAAE,GAAG,MAAMc;YAC1BO,OAAON;YACP,cAAcA;YACdO,UAAU/B,eAAe,IAAIgC;QACjC,GAAG5B,SAAS,CAACK,EAAE;IACnB;AACJ"}