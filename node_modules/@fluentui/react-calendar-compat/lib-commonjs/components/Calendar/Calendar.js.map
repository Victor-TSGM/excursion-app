{"version":3,"sources":["Calendar.js"],"sourcesContent":["import * as React from 'react';\nimport { Backspace, Enter, Escape, PageDown, PageUp, Space } from '@fluentui/keyboard-keys';\nimport { useControllableState } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { addMonths, addYears, DateRangeType, DayOfWeek, DEFAULT_CALENDAR_STRINGS, DEFAULT_DATE_FORMATTING, FirstWeekOfYear, focusAsync } from '../../utils';\nimport { CalendarDay } from '../CalendarDay/CalendarDay';\nimport { CalendarMonth } from '../CalendarMonth/CalendarMonth';\nimport { defaultNavigationIcons } from './calendarNavigationIcons';\nimport { useCalendarStyles_unstable } from './useCalendarStyles.styles';\nconst MIN_SIZE_FORCE_OVERLAY = 440;\nconst defaultWorkWeekDays = [\n    DayOfWeek.Monday,\n    DayOfWeek.Tuesday,\n    DayOfWeek.Wednesday,\n    DayOfWeek.Thursday,\n    DayOfWeek.Friday\n];\nfunction useDateState(props) {\n    const { value, today: todayProp, onSelectDate } = props;\n    const today = React.useMemo(()=>{\n        if (todayProp === undefined) {\n            return new Date();\n        }\n        return todayProp;\n    }, [\n        todayProp\n    ]);\n    /** The currently selected date in the calendar */ const [selectedDate, setSelectedDate] = useControllableState({\n        defaultState: today,\n        initialState: today,\n        state: value\n    });\n    /** The currently focused date in the day picker, but not necessarily selected */ const [navigatedDay = today, setNavigatedDay] = React.useState(value);\n    /** The currently focused date in the month picker, but not necessarily selected */ const [navigatedMonth = today, setNavigatedMonth] = React.useState(value);\n    /** If using a controlled value, when that value changes, navigate to that date */ const [lastSelectedDate = today, setLastSelectedDate] = React.useState(value);\n    if (value && lastSelectedDate.valueOf() !== value.valueOf()) {\n        setNavigatedDay(value);\n        setNavigatedMonth(value);\n        setLastSelectedDate(value);\n    }\n    const navigateMonth = (date)=>{\n        setNavigatedMonth(date);\n    };\n    const navigateDay = (date)=>{\n        setNavigatedMonth(date);\n        setNavigatedDay(date);\n    };\n    const onDateSelected = (date, selectedDateRangeArray)=>{\n        setNavigatedMonth(date);\n        setNavigatedDay(date);\n        setSelectedDate(date);\n        onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(date, selectedDateRangeArray);\n    };\n    return [\n        selectedDate,\n        navigatedDay,\n        navigatedMonth,\n        onDateSelected,\n        navigateDay,\n        navigateMonth\n    ];\n}\nfunction useVisibilityState({ isDayPickerVisible: isDayPickerVisibleProp, isMonthPickerVisible: isMonthPickerVisibleProp, showMonthPickerAsOverlay }) {\n    /** State used to show/hide month picker */ const showMonthPickerAsOverlayState = useShowMonthPickerAsOverlay({\n        isDayPickerVisible: isDayPickerVisibleProp,\n        showMonthPickerAsOverlay\n    });\n    const [isMonthPickerVisible, setIsMonthPickerVisible] = useControllableState({\n        defaultState: false,\n        initialState: true,\n        state: showMonthPickerAsOverlayState ? undefined : isMonthPickerVisibleProp\n    });\n    /** State used to show/hide day picker */ const [isDayPickerVisible, setIsDayPickerVisible] = useControllableState({\n        defaultState: true,\n        initialState: true,\n        state: showMonthPickerAsOverlayState ? undefined : isDayPickerVisibleProp\n    });\n    const toggleDayMonthPickerVisibility = ()=>{\n        setIsMonthPickerVisible(!isMonthPickerVisible);\n        setIsDayPickerVisible(!isDayPickerVisible);\n    };\n    return [\n        isMonthPickerVisible,\n        isDayPickerVisible,\n        toggleDayMonthPickerVisibility\n    ];\n}\nfunction useFocusLogic({ componentRef }, isDayPickerVisible, isMonthPickerVisible) {\n    const dayPicker = React.useRef(null);\n    const monthPicker = React.useRef(null);\n    const focusOnUpdate = React.useRef(false);\n    const { targetDocument } = useFluent();\n    const win = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;\n    const focus = React.useCallback(()=>{\n        if (isDayPickerVisible && dayPicker.current) {\n            focusAsync(dayPicker.current, win);\n        } else if (isMonthPickerVisible && monthPicker.current) {\n            focusAsync(monthPicker.current, win);\n        }\n    }, [\n        isDayPickerVisible,\n        isMonthPickerVisible,\n        win\n    ]);\n    React.useImperativeHandle(componentRef, ()=>({\n            focus\n        }), [\n        focus\n    ]);\n    React.useEffect(()=>{\n        if (focusOnUpdate.current) {\n            focus();\n            focusOnUpdate.current = false;\n        }\n    });\n    const focusOnNextUpdate = ()=>{\n        focusOnUpdate.current = true;\n    };\n    return [\n        dayPicker,\n        monthPicker,\n        focusOnNextUpdate\n    ];\n}\n/**\n * @internal\n */ export const Calendar = /*#__PURE__*/ React.forwardRef((props, forwardedRef)=>{\n    const { allFocusable = false, calendarDayProps, calendarMonthProps, className, componentRef, dateRangeType = DateRangeType.Day, dateTimeFormatter = DEFAULT_DATE_FORMATTING, firstDayOfWeek = DayOfWeek.Sunday, firstWeekOfYear = FirstWeekOfYear.FirstDay, highlightCurrentMonth = false, highlightSelectedMonth = false, id, isDayPickerVisible: isDayPickerVisibleProp = true, isMonthPickerVisible: isMonthPickerVisibleProp = true, maxDate, minDate, onDismiss, onSelectDate, restrictedDates, showCloseButton = false, showGoToToday = true, showMonthPickerAsOverlay: showMonthPickerAsOverlayProp = false, showSixWeeksByDefault = false, showWeekNumbers = false, strings = DEFAULT_CALENDAR_STRINGS, today: todayProp, value, workWeekDays = defaultWorkWeekDays } = props;\n    const today = React.useMemo(()=>{\n        return todayProp !== null && todayProp !== void 0 ? todayProp : new Date();\n    }, [\n        todayProp\n    ]);\n    const [selectedDate, navigatedDay, navigatedMonth, onDateSelected, navigateDay, navigateMonth] = useDateState({\n        onSelectDate,\n        value,\n        today\n    });\n    const [isMonthPickerVisible, isDayPickerVisible, toggleDayMonthPickerVisibility] = useVisibilityState({\n        isDayPickerVisible: isDayPickerVisibleProp,\n        isMonthPickerVisible: isMonthPickerVisibleProp,\n        showMonthPickerAsOverlay: showMonthPickerAsOverlayProp\n    });\n    const [dayPicker, monthPicker, focusOnNextUpdate] = useFocusLogic({\n        componentRef\n    }, isDayPickerVisible, isMonthPickerVisible);\n    const renderGoToTodayButton = ()=>{\n        let goTodayEnabled = showGoToToday;\n        if (goTodayEnabled && today) {\n            goTodayEnabled = navigatedDay.getFullYear() !== today.getFullYear() || navigatedDay.getMonth() !== today.getMonth() || navigatedMonth.getFullYear() !== today.getFullYear() || navigatedMonth.getMonth() !== today.getMonth();\n        }\n        return showGoToToday && /*#__PURE__*/ React.createElement(\"button\", {\n            className: classes.goTodayButton,\n            onClick: onGotoToday,\n            onKeyDown: onButtonKeyDown(onGotoToday),\n            type: \"button\",\n            disabled: !goTodayEnabled\n        }, strings.goToToday);\n    };\n    const onNavigateDayDate = (date, focusOnNavigatedDay)=>{\n        navigateDay(date);\n        if (focusOnNavigatedDay) {\n            focusOnNextUpdate();\n        }\n    };\n    const onNavigateMonthDate = (date, focusOnNavigatedDay)=>{\n        if (focusOnNavigatedDay) {\n            focusOnNextUpdate();\n        }\n        if (!focusOnNavigatedDay) {\n            navigateMonth(date);\n            return;\n        }\n        if (monthPickerOnly) {\n            onDateSelected(date);\n        }\n        navigateDay(date);\n    };\n    const showMonthPickerAsOverlay = useShowMonthPickerAsOverlay({\n        isDayPickerVisible: isDayPickerVisibleProp,\n        showMonthPickerAsOverlay: showMonthPickerAsOverlayProp\n    });\n    const onHeaderSelect = showMonthPickerAsOverlay ? ()=>{\n        toggleDayMonthPickerVisibility();\n        focusOnNextUpdate();\n    } : undefined;\n    const onGotoToday = ()=>{\n        navigateDay(today);\n        focusOnNextUpdate();\n    };\n    const onButtonKeyDown = (callback)=>{\n        return (ev)=>{\n            switch(ev.key){\n                case Enter:\n                case Space:\n                    callback();\n                    break;\n            }\n        };\n    };\n    const onDatePickerPopupKeyDown = (ev)=>{\n        switch(ev.key){\n            case Enter:\n                ev.preventDefault();\n                break;\n            case Backspace:\n                ev.preventDefault();\n                break;\n            case Escape:\n                ev.stopPropagation();\n                onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n                break;\n            case PageUp:\n                if (ev.ctrlKey) {\n                    // go to next year\n                    navigateDay(addYears(navigatedDay, 1));\n                } else {\n                    // go to next month\n                    navigateDay(addMonths(navigatedDay, 1));\n                }\n                ev.preventDefault();\n                break;\n            case PageDown:\n                if (ev.ctrlKey) {\n                    // go to previous year\n                    navigateDay(addYears(navigatedDay, -1));\n                } else {\n                    // go to previous month\n                    navigateDay(addMonths(navigatedDay, -1));\n                }\n                ev.preventDefault();\n                break;\n            default:\n                break;\n        }\n    };\n    const monthPickerOnly = !showMonthPickerAsOverlay && !isDayPickerVisible;\n    const classes = useCalendarStyles_unstable({\n        className,\n        isDayPickerVisible,\n        isMonthPickerVisible,\n        showWeekNumbers\n    });\n    let todayDateString = '';\n    let selectedDateString = '';\n    if (dateTimeFormatter && strings.todayDateFormatString) {\n        todayDateString = strings.todayDateFormatString.replace('{0}', dateTimeFormatter.formatMonthDayYear(today, strings));\n    }\n    if (dateTimeFormatter && strings.selectedDateFormatString) {\n        const dateStringFormatter = monthPickerOnly ? dateTimeFormatter.formatMonthYear : dateTimeFormatter.formatMonthDayYear;\n        selectedDateString = strings.selectedDateFormatString.replace('{0}', dateStringFormatter(selectedDate, strings));\n    }\n    const selectionAndTodayString = selectedDateString + ', ' + todayDateString;\n    return /*#__PURE__*/ React.createElement(\"div\", {\n        id: id,\n        ref: forwardedRef,\n        role: \"group\",\n        \"aria-label\": selectionAndTodayString,\n        className: classes.root,\n        onKeyDown: onDatePickerPopupKeyDown\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        className: classes.liveRegion,\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"true\"\n    }, /*#__PURE__*/ React.createElement(\"span\", null, selectedDateString)), isDayPickerVisible && /*#__PURE__*/ React.createElement(CalendarDay, {\n        selectedDate: selectedDate,\n        navigatedDate: navigatedDay,\n        today: today,\n        onSelectDate: onDateSelected,\n        // eslint-disable-next-line react/jsx-no-bind\n        onNavigateDate: onNavigateDayDate,\n        onDismiss: onDismiss,\n        firstDayOfWeek: firstDayOfWeek,\n        dateRangeType: dateRangeType,\n        strings: strings,\n        // eslint-disable-next-line react/jsx-no-bind\n        onHeaderSelect: onHeaderSelect,\n        showWeekNumbers: showWeekNumbers,\n        firstWeekOfYear: firstWeekOfYear,\n        dateTimeFormatter: dateTimeFormatter,\n        showSixWeeksByDefault: showSixWeeksByDefault,\n        minDate: minDate,\n        maxDate: maxDate,\n        navigationIcons: defaultNavigationIcons,\n        restrictedDates: restrictedDates,\n        workWeekDays: workWeekDays,\n        componentRef: dayPicker,\n        showCloseButton: showCloseButton,\n        allFocusable: allFocusable,\n        ...calendarDayProps\n    }), isDayPickerVisible && isMonthPickerVisible && /*#__PURE__*/ React.createElement(\"div\", {\n        className: classes.divider\n    }), isMonthPickerVisible ? /*#__PURE__*/ React.createElement(\"div\", {\n        className: classes.monthPickerWrapper\n    }, /*#__PURE__*/ React.createElement(CalendarMonth, {\n        navigatedDate: navigatedMonth,\n        selectedDate: navigatedDay,\n        strings: strings,\n        // eslint-disable-next-line react/jsx-no-bind\n        onNavigateDate: onNavigateMonthDate,\n        today: today,\n        highlightCurrentMonth: highlightCurrentMonth,\n        highlightSelectedMonth: highlightSelectedMonth,\n        // eslint-disable-next-line react/jsx-no-bind\n        onHeaderSelect: onHeaderSelect,\n        dateTimeFormatter: dateTimeFormatter,\n        minDate: minDate,\n        maxDate: maxDate,\n        componentRef: monthPicker,\n        navigationIcons: defaultNavigationIcons,\n        ...calendarMonthProps\n    }), renderGoToTodayButton()) : renderGoToTodayButton());\n});\nCalendar.displayName = 'Calendar';\nconst useShowMonthPickerAsOverlay = ({ isDayPickerVisible, showMonthPickerAsOverlay })=>{\n    const { targetDocument } = useFluent();\n    const win = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;\n    return showMonthPickerAsOverlay || isDayPickerVisible && win && win.innerWidth <= MIN_SIZE_FORCE_OVERLAY;\n};\n"],"names":["Calendar","MIN_SIZE_FORCE_OVERLAY","defaultWorkWeekDays","DayOfWeek","Monday","Tuesday","Wednesday","Thursday","Friday","useDateState","props","value","today","todayProp","onSelectDate","React","useMemo","undefined","Date","selectedDate","setSelectedDate","useControllableState","defaultState","initialState","state","navigatedDay","setNavigatedDay","useState","navigatedMonth","setNavigatedMonth","lastSelectedDate","setLastSelectedDate","valueOf","navigateMonth","date","navigateDay","onDateSelected","selectedDateRangeArray","useVisibilityState","isDayPickerVisible","isDayPickerVisibleProp","isMonthPickerVisible","isMonthPickerVisibleProp","showMonthPickerAsOverlay","showMonthPickerAsOverlayState","useShowMonthPickerAsOverlay","setIsMonthPickerVisible","setIsDayPickerVisible","toggleDayMonthPickerVisibility","useFocusLogic","componentRef","dayPicker","useRef","monthPicker","focusOnUpdate","targetDocument","useFluent","win","defaultView","focus","useCallback","current","focusAsync","useImperativeHandle","useEffect","focusOnNextUpdate","forwardRef","forwardedRef","allFocusable","calendarDayProps","calendarMonthProps","className","dateRangeType","DateRangeType","Day","dateTimeFormatter","DEFAULT_DATE_FORMATTING","firstDayOfWeek","Sunday","firstWeekOfYear","FirstWeekOfYear","FirstDay","highlightCurrentMonth","highlightSelectedMonth","id","maxDate","minDate","onDismiss","restrictedDates","showCloseButton","showGoToToday","showMonthPickerAsOverlayProp","showSixWeeksByDefault","showWeekNumbers","strings","DEFAULT_CALENDAR_STRINGS","workWeekDays","renderGoToTodayButton","goTodayEnabled","getFullYear","getMonth","createElement","classes","goTodayButton","onClick","onGotoToday","onKeyDown","onButtonKeyDown","type","disabled","goToToday","onNavigateDayDate","focusOnNavigatedDay","onNavigateMonthDate","monthPickerOnly","onHeaderSelect","callback","ev","key","Enter","Space","onDatePickerPopupKeyDown","preventDefault","Backspace","Escape","stopPropagation","PageUp","ctrlKey","addYears","addMonths","PageDown","useCalendarStyles_unstable","todayDateString","selectedDateString","todayDateFormatString","replace","formatMonthDayYear","selectedDateFormatString","dateStringFormatter","formatMonthYear","selectionAndTodayString","ref","role","root","liveRegion","CalendarDay","navigatedDate","onNavigateDate","navigationIcons","defaultNavigationIcons","divider","monthPickerWrapper","CalendarMonth","displayName","innerWidth"],"mappings":";;;;+BA8HiBA;;;eAAAA;;;;iEA9HM;8BAC2C;gCAC7B;qCACW;uBAC8F;6BAClH;+BACE;yCACS;yCACI;AAC3C,MAAMC,yBAAyB;AAC/B,MAAMC,sBAAsB;IACxBC,gBAAS,CAACC,MAAM;IAChBD,gBAAS,CAACE,OAAO;IACjBF,gBAAS,CAACG,SAAS;IACnBH,gBAAS,CAACI,QAAQ;IAClBJ,gBAAS,CAACK,MAAM;CACnB;AACD,SAASC,aAAaC,KAAK;IACvB,MAAM,EAAEC,KAAK,EAAEC,OAAOC,SAAS,EAAEC,YAAY,EAAE,GAAGJ;IAClD,MAAME,QAAQG,OAAMC,OAAO,CAAC;QACxB,IAAIH,cAAcI,WAAW;YACzB,OAAO,IAAIC;QACf;QACA,OAAOL;IACX,GAAG;QACCA;KACH;IACD,gDAAgD,GAAG,MAAM,CAACM,cAAcC,gBAAgB,GAAGC,IAAAA,oCAAoB,EAAC;QAC5GC,cAAcV;QACdW,cAAcX;QACdY,OAAOb;IACX;IACA,+EAA+E,GAAG,MAAM,CAACc,eAAeb,KAAK,EAAEc,gBAAgB,GAAGX,OAAMY,QAAQ,CAAChB;IACjJ,iFAAiF,GAAG,MAAM,CAACiB,iBAAiBhB,KAAK,EAAEiB,kBAAkB,GAAGd,OAAMY,QAAQ,CAAChB;IACvJ,gFAAgF,GAAG,MAAM,CAACmB,mBAAmBlB,KAAK,EAAEmB,oBAAoB,GAAGhB,OAAMY,QAAQ,CAAChB;IAC1J,IAAIA,SAASmB,iBAAiBE,OAAO,OAAOrB,MAAMqB,OAAO,IAAI;QACzDN,gBAAgBf;QAChBkB,kBAAkBlB;QAClBoB,oBAAoBpB;IACxB;IACA,MAAMsB,gBAAgB,CAACC;QACnBL,kBAAkBK;IACtB;IACA,MAAMC,cAAc,CAACD;QACjBL,kBAAkBK;QAClBR,gBAAgBQ;IACpB;IACA,MAAME,iBAAiB,CAACF,MAAMG;QAC1BR,kBAAkBK;QAClBR,gBAAgBQ;QAChBd,gBAAgBc;QAChBpB,iBAAiB,QAAQA,iBAAiB,KAAK,IAAI,KAAK,IAAIA,aAAaoB,MAAMG;IACnF;IACA,OAAO;QACHlB;QACAM;QACAG;QACAQ;QACAD;QACAF;KACH;AACL;AACA,SAASK,mBAAmB,EAAEC,oBAAoBC,sBAAsB,EAAEC,sBAAsBC,wBAAwB,EAAEC,wBAAwB,EAAE;IAChJ,yCAAyC,GAAG,MAAMC,gCAAgCC,4BAA4B;QAC1GN,oBAAoBC;QACpBG;IACJ;IACA,MAAM,CAACF,sBAAsBK,wBAAwB,GAAGzB,IAAAA,oCAAoB,EAAC;QACzEC,cAAc;QACdC,cAAc;QACdC,OAAOoB,gCAAgC3B,YAAYyB;IACvD;IACA,uCAAuC,GAAG,MAAM,CAACH,oBAAoBQ,sBAAsB,GAAG1B,IAAAA,oCAAoB,EAAC;QAC/GC,cAAc;QACdC,cAAc;QACdC,OAAOoB,gCAAgC3B,YAAYuB;IACvD;IACA,MAAMQ,iCAAiC;QACnCF,wBAAwB,CAACL;QACzBM,sBAAsB,CAACR;IAC3B;IACA,OAAO;QACHE;QACAF;QACAS;KACH;AACL;AACA,SAASC,cAAc,EAAEC,YAAY,EAAE,EAAEX,kBAAkB,EAAEE,oBAAoB;IAC7E,MAAMU,YAAYpC,OAAMqC,MAAM,CAAC;IAC/B,MAAMC,cAActC,OAAMqC,MAAM,CAAC;IACjC,MAAME,gBAAgBvC,OAAMqC,MAAM,CAAC;IACnC,MAAM,EAAEG,cAAc,EAAE,GAAGC,IAAAA,uCAAS;IACpC,MAAMC,MAAMF,mBAAmB,QAAQA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeG,WAAW;IACtG,MAAMC,QAAQ5C,OAAM6C,WAAW,CAAC;QAC5B,IAAIrB,sBAAsBY,UAAUU,OAAO,EAAE;YACzCC,IAAAA,iBAAU,EAACX,UAAUU,OAAO,EAAEJ;QAClC,OAAO,IAAIhB,wBAAwBY,YAAYQ,OAAO,EAAE;YACpDC,IAAAA,iBAAU,EAACT,YAAYQ,OAAO,EAAEJ;QACpC;IACJ,GAAG;QACClB;QACAE;QACAgB;KACH;IACD1C,OAAMgD,mBAAmB,CAACb,cAAc,IAAK,CAAA;YACrCS;QACJ,CAAA,GAAI;QACJA;KACH;IACD5C,OAAMiD,SAAS,CAAC;QACZ,IAAIV,cAAcO,OAAO,EAAE;YACvBF;YACAL,cAAcO,OAAO,GAAG;QAC5B;IACJ;IACA,MAAMI,oBAAoB;QACtBX,cAAcO,OAAO,GAAG;IAC5B;IACA,OAAO;QACHV;QACAE;QACAY;KACH;AACL;AAGW,MAAMjE,WAAW,WAAW,GAAGe,OAAMmD,UAAU,CAAC,CAACxD,OAAOyD;IAC/D,MAAM,EAAEC,eAAe,KAAK,EAAEC,gBAAgB,EAAEC,kBAAkB,EAAEC,SAAS,EAAErB,YAAY,EAAEsB,gBAAgBC,oBAAa,CAACC,GAAG,EAAEC,oBAAoBC,8BAAuB,EAAEC,iBAAiB1E,gBAAS,CAAC2E,MAAM,EAAEC,kBAAkBC,sBAAe,CAACC,QAAQ,EAAEC,wBAAwB,KAAK,EAAEC,yBAAyB,KAAK,EAAEC,EAAE,EAAE7C,oBAAoBC,yBAAyB,IAAI,EAAEC,sBAAsBC,2BAA2B,IAAI,EAAE2C,OAAO,EAAEC,OAAO,EAAEC,SAAS,EAAEzE,YAAY,EAAE0E,eAAe,EAAEC,kBAAkB,KAAK,EAAEC,gBAAgB,IAAI,EAAE/C,0BAA0BgD,+BAA+B,KAAK,EAAEC,wBAAwB,KAAK,EAAEC,kBAAkB,KAAK,EAAEC,UAAUC,+BAAwB,EAAEnF,OAAOC,SAAS,EAAEF,KAAK,EAAEqF,eAAe9F,mBAAmB,EAAE,GAAGQ;IAChvB,MAAME,QAAQG,OAAMC,OAAO,CAAC;QACxB,OAAOH,cAAc,QAAQA,cAAc,KAAK,IAAIA,YAAY,IAAIK;IACxE,GAAG;QACCL;KACH;IACD,MAAM,CAACM,cAAcM,cAAcG,gBAAgBQ,gBAAgBD,aAAaF,cAAc,GAAGxB,aAAa;QAC1GK;QACAH;QACAC;IACJ;IACA,MAAM,CAAC6B,sBAAsBF,oBAAoBS,+BAA+B,GAAGV,mBAAmB;QAClGC,oBAAoBC;QACpBC,sBAAsBC;QACtBC,0BAA0BgD;IAC9B;IACA,MAAM,CAACxC,WAAWE,aAAaY,kBAAkB,GAAGhB,cAAc;QAC9DC;IACJ,GAAGX,oBAAoBE;IACvB,MAAMwD,wBAAwB;QAC1B,IAAIC,iBAAiBR;QACrB,IAAIQ,kBAAkBtF,OAAO;YACzBsF,iBAAiBzE,aAAa0E,WAAW,OAAOvF,MAAMuF,WAAW,MAAM1E,aAAa2E,QAAQ,OAAOxF,MAAMwF,QAAQ,MAAMxE,eAAeuE,WAAW,OAAOvF,MAAMuF,WAAW,MAAMvE,eAAewE,QAAQ,OAAOxF,MAAMwF,QAAQ;QAC/N;QACA,OAAOV,iBAAiB,WAAW,GAAG3E,OAAMsF,aAAa,CAAC,UAAU;YAChE9B,WAAW+B,QAAQC,aAAa;YAChCC,SAASC;YACTC,WAAWC,gBAAgBF;YAC3BG,MAAM;YACNC,UAAU,CAACX;QACf,GAAGJ,QAAQgB,SAAS;IACxB;IACA,MAAMC,oBAAoB,CAAC7E,MAAM8E;QAC7B7E,YAAYD;QACZ,IAAI8E,qBAAqB;YACrB/C;QACJ;IACJ;IACA,MAAMgD,sBAAsB,CAAC/E,MAAM8E;QAC/B,IAAIA,qBAAqB;YACrB/C;QACJ;QACA,IAAI,CAAC+C,qBAAqB;YACtB/E,cAAcC;YACd;QACJ;QACA,IAAIgF,iBAAiB;YACjB9E,eAAeF;QACnB;QACAC,YAAYD;IAChB;IACA,MAAMS,2BAA2BE,4BAA4B;QACzDN,oBAAoBC;QACpBG,0BAA0BgD;IAC9B;IACA,MAAMwB,iBAAiBxE,2BAA2B;QAC9CK;QACAiB;IACJ,IAAIhD;IACJ,MAAMwF,cAAc;QAChBtE,YAAYvB;QACZqD;IACJ;IACA,MAAM0C,kBAAkB,CAACS;QACrB,OAAO,CAACC;YACJ,OAAOA,GAAGC,GAAG;gBACT,KAAKC,mBAAK;gBACV,KAAKC,mBAAK;oBACNJ;oBACA;YACR;QACJ;IACJ;IACA,MAAMK,2BAA2B,CAACJ;QAC9B,OAAOA,GAAGC,GAAG;YACT,KAAKC,mBAAK;gBACNF,GAAGK,cAAc;gBACjB;YACJ,KAAKC,uBAAS;gBACVN,GAAGK,cAAc;gBACjB;YACJ,KAAKE,oBAAM;gBACPP,GAAGQ,eAAe;gBAClBtC,cAAc,QAAQA,cAAc,KAAK,IAAI,KAAK,IAAIA;gBACtD;YACJ,KAAKuC,oBAAM;gBACP,IAAIT,GAAGU,OAAO,EAAE;oBACZ,kBAAkB;oBAClB5F,YAAY6F,IAAAA,eAAQ,EAACvG,cAAc;gBACvC,OAAO;oBACH,mBAAmB;oBACnBU,YAAY8F,IAAAA,gBAAS,EAACxG,cAAc;gBACxC;gBACA4F,GAAGK,cAAc;gBACjB;YACJ,KAAKQ,sBAAQ;gBACT,IAAIb,GAAGU,OAAO,EAAE;oBACZ,sBAAsB;oBACtB5F,YAAY6F,IAAAA,eAAQ,EAACvG,cAAc,CAAC;gBACxC,OAAO;oBACH,uBAAuB;oBACvBU,YAAY8F,IAAAA,gBAAS,EAACxG,cAAc,CAAC;gBACzC;gBACA4F,GAAGK,cAAc;gBACjB;YACJ;gBACI;QACR;IACJ;IACA,MAAMR,kBAAkB,CAACvE,4BAA4B,CAACJ;IACtD,MAAM+D,UAAU6B,IAAAA,mDAA0B,EAAC;QACvC5D;QACAhC;QACAE;QACAoD;IACJ;IACA,IAAIuC,kBAAkB;IACtB,IAAIC,qBAAqB;IACzB,IAAI1D,qBAAqBmB,QAAQwC,qBAAqB,EAAE;QACpDF,kBAAkBtC,QAAQwC,qBAAqB,CAACC,OAAO,CAAC,OAAO5D,kBAAkB6D,kBAAkB,CAAC5H,OAAOkF;IAC/G;IACA,IAAInB,qBAAqBmB,QAAQ2C,wBAAwB,EAAE;QACvD,MAAMC,sBAAsBxB,kBAAkBvC,kBAAkBgE,eAAe,GAAGhE,kBAAkB6D,kBAAkB;QACtHH,qBAAqBvC,QAAQ2C,wBAAwB,CAACF,OAAO,CAAC,OAAOG,oBAAoBvH,cAAc2E;IAC3G;IACA,MAAM8C,0BAA0BP,qBAAqB,OAAOD;IAC5D,OAAO,WAAW,GAAGrH,OAAMsF,aAAa,CAAC,OAAO;QAC5CjB,IAAIA;QACJyD,KAAK1E;QACL2E,MAAM;QACN,cAAcF;QACdrE,WAAW+B,QAAQyC,IAAI;QACvBrC,WAAWe;IACf,GAAG,WAAW,GAAG1G,OAAMsF,aAAa,CAAC,OAAO;QACxC9B,WAAW+B,QAAQ0C,UAAU;QAC7B,aAAa;QACb,eAAe;IACnB,GAAG,WAAW,GAAGjI,OAAMsF,aAAa,CAAC,QAAQ,MAAMgC,sBAAsB9F,sBAAsB,WAAW,GAAGxB,OAAMsF,aAAa,CAAC4C,wBAAW,EAAE;QAC1I9H,cAAcA;QACd+H,eAAezH;QACfb,OAAOA;QACPE,cAAcsB;QACd,6CAA6C;QAC7C+G,gBAAgBpC;QAChBxB,WAAWA;QACXV,gBAAgBA;QAChBL,eAAeA;QACfsB,SAASA;QACT,6CAA6C;QAC7CqB,gBAAgBA;QAChBtB,iBAAiBA;QACjBd,iBAAiBA;QACjBJ,mBAAmBA;QACnBiB,uBAAuBA;QACvBN,SAASA;QACTD,SAASA;QACT+D,iBAAiBC,+CAAsB;QACvC7D,iBAAiBA;QACjBQ,cAAcA;QACd9C,cAAcC;QACdsC,iBAAiBA;QACjBrB,cAAcA;QACd,GAAGC,gBAAgB;IACvB,IAAI9B,sBAAsBE,wBAAwB,WAAW,GAAG1B,OAAMsF,aAAa,CAAC,OAAO;QACvF9B,WAAW+B,QAAQgD,OAAO;IAC9B,IAAI7G,uBAAuB,WAAW,GAAG1B,OAAMsF,aAAa,CAAC,OAAO;QAChE9B,WAAW+B,QAAQiD,kBAAkB;IACzC,GAAG,WAAW,GAAGxI,OAAMsF,aAAa,CAACmD,4BAAa,EAAE;QAChDN,eAAetH;QACfT,cAAcM;QACdqE,SAASA;QACT,6CAA6C;QAC7CqD,gBAAgBlC;QAChBrG,OAAOA;QACPsE,uBAAuBA;QACvBC,wBAAwBA;QACxB,6CAA6C;QAC7CgC,gBAAgBA;QAChBxC,mBAAmBA;QACnBW,SAASA;QACTD,SAASA;QACTnC,cAAcG;QACd+F,iBAAiBC,+CAAsB;QACvC,GAAG/E,kBAAkB;IACzB,IAAI2B,2BAA2BA;AACnC;AACAjG,SAASyJ,WAAW,GAAG;AACvB,MAAM5G,8BAA8B,CAAC,EAAEN,kBAAkB,EAAEI,wBAAwB,EAAE;IACjF,MAAM,EAAEY,cAAc,EAAE,GAAGC,IAAAA,uCAAS;IACpC,MAAMC,MAAMF,mBAAmB,QAAQA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeG,WAAW;IACtG,OAAOf,4BAA4BJ,sBAAsBkB,OAAOA,IAAIiG,UAAU,IAAIzJ;AACtF"}