{"version":3,"sources":["CalendarDay.js"],"sourcesContent":["import * as React from 'react';\nimport { Enter } from '@fluentui/keyboard-keys';\nimport { useId } from '@fluentui/react-utilities';\nimport { mergeClasses } from '@griffel/react';\nimport { addMonths, compareDatePart, getMonthEnd, getMonthStart } from '../../utils';\nimport { CalendarDayGrid } from '../CalendarDayGrid/CalendarDayGrid';\nimport { useCalendarDayStyles_unstable } from './useCalendarDayStyles.styles';\n/**\n * @internal\n */ export const CalendarDay = (props)=>{\n    const dayGrid = React.useRef(null);\n    React.useImperativeHandle(props.componentRef, ()=>({\n            focus () {\n                var _dayGrid_current_focus, _dayGrid_current;\n                (_dayGrid_current = dayGrid.current) === null || _dayGrid_current === void 0 ? void 0 : (_dayGrid_current_focus = _dayGrid_current.focus) === null || _dayGrid_current_focus === void 0 ? void 0 : _dayGrid_current_focus.call(_dayGrid_current);\n            }\n        }), []);\n    const { strings, navigatedDate, dateTimeFormatter, className, onHeaderSelect, showSixWeeksByDefault, minDate, maxDate, restrictedDates, onNavigateDate, showWeekNumbers, dateRangeType, animationDirection } = props;\n    const monthAndYearId = useId();\n    const classNames = useCalendarDayStyles_unstable({\n        className,\n        headerIsClickable: !!onHeaderSelect,\n        showWeekNumbers,\n        animationDirection\n    });\n    const monthAndYear = dateTimeFormatter.formatMonthYear(navigatedDate, strings);\n    const HeaderButtonComponentType = onHeaderSelect ? 'button' : 'div';\n    const headerAriaLabel = strings.yearPickerHeaderAriaLabel ? strings.yearPickerHeaderAriaLabel.replace('{0}', monthAndYear) : monthAndYear;\n    const { ...propsWithoutStyles } = props;\n    return /*#__PURE__*/ React.createElement(\"div\", {\n        className: classNames.root\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        className: classNames.header\n    }, /*#__PURE__*/ React.createElement(HeaderButtonComponentType, {\n        \"aria-label\": onHeaderSelect ? headerAriaLabel : undefined,\n        className: classNames.monthAndYear,\n        onClick: onHeaderSelect,\n        tabIndex: onHeaderSelect ? 0 : -1,\n        onKeyDown: onButtonKeyDown(onHeaderSelect),\n        type: \"button\"\n    }, /*#__PURE__*/ React.createElement(\"span\", {\n        id: monthAndYearId,\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"true\"\n    }, monthAndYear)), /*#__PURE__*/ React.createElement(CalendarDayNavigationButtons, {\n        ...props,\n        classNames: classNames\n    })), /*#__PURE__*/ React.createElement(CalendarDayGrid, {\n        ...propsWithoutStyles,\n        componentRef: dayGrid,\n        strings: strings,\n        navigatedDate: navigatedDate,\n        weeksToShow: showSixWeeksByDefault ? 6 : undefined,\n        dateTimeFormatter: dateTimeFormatter,\n        minDate: minDate,\n        maxDate: maxDate,\n        restrictedDates: restrictedDates,\n        onNavigateDate: onNavigateDate,\n        labelledBy: monthAndYearId,\n        dateRangeType: dateRangeType\n    }));\n};\nCalendarDay.displayName = 'CalendarDay';\nconst CalendarDayNavigationButtons = (props)=>{\n    const { minDate, maxDate, navigatedDate, navigationIcons, allFocusable, strings, showCloseButton, classNames, onNavigateDate, onDismiss } = props;\n    const onSelectNextMonth = ()=>{\n        onNavigateDate(addMonths(navigatedDate, 1), false);\n    };\n    const onSelectPrevMonth = ()=>{\n        onNavigateDate(addMonths(navigatedDate, -1), false);\n    };\n    // determine if previous/next months are in bounds\n    const prevMonthInBounds = minDate ? compareDatePart(minDate, getMonthStart(navigatedDate)) < 0 : true;\n    const nextMonthInBounds = maxDate ? compareDatePart(getMonthEnd(navigatedDate), maxDate) < 0 : true;\n    // use aria-disabled instead of disabled so focus is not lost\n    // when a prev/next button becomes disabled after being clicked\n    return /*#__PURE__*/ React.createElement(\"div\", {\n        className: classNames.monthComponents\n    }, /*#__PURE__*/ React.createElement(\"button\", {\n        className: mergeClasses(classNames.headerIconButton, !prevMonthInBounds && classNames.disabledStyle),\n        tabIndex: prevMonthInBounds ? undefined : allFocusable ? 0 : -1,\n        \"aria-disabled\": !prevMonthInBounds,\n        onClick: prevMonthInBounds ? onSelectPrevMonth : undefined,\n        onKeyDown: prevMonthInBounds ? onButtonKeyDown(onSelectPrevMonth) : undefined,\n        title: strings.prevMonthAriaLabel ? strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, -1).getMonth()] : undefined,\n        type: \"button\"\n    }, navigationIcons.upNavigation), /*#__PURE__*/ React.createElement(\"button\", {\n        className: mergeClasses(classNames.headerIconButton, !nextMonthInBounds && classNames.disabledStyle),\n        tabIndex: nextMonthInBounds ? undefined : allFocusable ? 0 : -1,\n        \"aria-disabled\": !nextMonthInBounds,\n        onClick: nextMonthInBounds ? onSelectNextMonth : undefined,\n        onKeyDown: nextMonthInBounds ? onButtonKeyDown(onSelectNextMonth) : undefined,\n        title: strings.nextMonthAriaLabel ? strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, 1).getMonth()] : undefined,\n        type: \"button\"\n    }, navigationIcons.downNavigation), showCloseButton && /*#__PURE__*/ React.createElement(\"button\", {\n        className: classNames.headerIconButton,\n        onClick: onDismiss,\n        onKeyDown: onButtonKeyDown(onDismiss),\n        title: strings.closeButtonAriaLabel,\n        type: \"button\"\n    }, navigationIcons.dismiss));\n};\nCalendarDayNavigationButtons.displayName = 'CalendarDayNavigationButtons';\nconst onButtonKeyDown = (callback)=>(ev)=>{\n        switch(ev.key){\n            case Enter:\n                callback === null || callback === void 0 ? void 0 : callback();\n                break;\n        }\n    };\n"],"names":["CalendarDay","props","dayGrid","React","useRef","useImperativeHandle","componentRef","focus","_dayGrid_current_focus","_dayGrid_current","current","call","strings","navigatedDate","dateTimeFormatter","className","onHeaderSelect","showSixWeeksByDefault","minDate","maxDate","restrictedDates","onNavigateDate","showWeekNumbers","dateRangeType","animationDirection","monthAndYearId","useId","classNames","useCalendarDayStyles_unstable","headerIsClickable","monthAndYear","formatMonthYear","HeaderButtonComponentType","headerAriaLabel","yearPickerHeaderAriaLabel","replace","propsWithoutStyles","createElement","root","header","undefined","onClick","tabIndex","onKeyDown","onButtonKeyDown","type","id","CalendarDayNavigationButtons","CalendarDayGrid","weeksToShow","labelledBy","displayName","navigationIcons","allFocusable","showCloseButton","onDismiss","onSelectNextMonth","addMonths","onSelectPrevMonth","prevMonthInBounds","compareDatePart","getMonthStart","nextMonthInBounds","getMonthEnd","monthComponents","mergeClasses","headerIconButton","disabledStyle","title","prevMonthAriaLabel","months","getMonth","upNavigation","nextMonthAriaLabel","downNavigation","closeButtonAriaLabel","dismiss","callback","ev","key","Enter"],"mappings":"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"}