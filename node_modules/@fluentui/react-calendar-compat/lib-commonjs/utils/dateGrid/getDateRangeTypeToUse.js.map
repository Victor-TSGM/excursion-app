{"version":3,"sources":["getDateRangeTypeToUse.js"],"sourcesContent":["import { DateRangeType } from '../constants';\nimport { isContiguous } from './isContiguous';\n/**\n * Return corrected date range type, given `dateRangeType` and list of working days.\n * For non-contiguous working days and working week range type, returns general week range type.\n * For other cases returns input date range type.\n * @param dateRangeType - input type of range\n * @param workWeekDays - list of working days in a week\n */ export const getDateRangeTypeToUse = (dateRangeType, workWeekDays, firstDayOfWeek)=>{\n    if (workWeekDays && dateRangeType === DateRangeType.WorkWeek) {\n        if (!isContiguous(workWeekDays, true, firstDayOfWeek) || workWeekDays.length === 0) {\n            return DateRangeType.Week;\n        }\n    }\n    return dateRangeType;\n};\n"],"names":["getDateRangeTypeToUse","dateRangeType","workWeekDays","firstDayOfWeek","DateRangeType","WorkWeek","isContiguous","length","Week"],"mappings":";;;;+BAQiBA;;;eAAAA;;;2BARa;8BACD;AAOlB,MAAMA,wBAAwB,CAACC,eAAeC,cAAcC;IACnE,IAAID,gBAAgBD,kBAAkBG,wBAAa,CAACC,QAAQ,EAAE;QAC1D,IAAI,CAACC,IAAAA,0BAAY,EAACJ,cAAc,MAAMC,mBAAmBD,aAAaK,MAAM,KAAK,GAAG;YAChF,OAAOH,wBAAa,CAACI,IAAI;QAC7B;IACJ;IACA,OAAOP;AACX"}