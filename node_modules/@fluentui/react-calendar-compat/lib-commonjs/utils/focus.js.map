{"version":3,"sources":["focus.js"],"sourcesContent":["let targetToFocusOnNextRepaint = undefined;\n/**\n * Sets focus to an element asynchronously. The focus will be set at the next browser repaint,\n * meaning it won't cause any extra recalculations. If more than one focusAsync is called during one frame,\n * only the latest called focusAsync element will actually be focused\n * @param element - The element to focus\n */ export function focusAsync(element, win) {\n    if (element) {\n        // An element was already queued to be focused, so replace that one with the new element\n        if (targetToFocusOnNextRepaint) {\n            targetToFocusOnNextRepaint = element;\n            return;\n        }\n        targetToFocusOnNextRepaint = element;\n        if (win) {\n            // element.focus() is a no-op if the element is no longer in the DOM, meaning this is always safe\n            win.requestAnimationFrame(()=>{\n                targetToFocusOnNextRepaint && targetToFocusOnNextRepaint.focus();\n                // We are done focusing for this frame, so reset the queued focus element\n                targetToFocusOnNextRepaint = undefined;\n            });\n        }\n    }\n}\n"],"names":["focusAsync","targetToFocusOnNextRepaint","undefined","element","win","requestAnimationFrame","focus"],"mappings":";;;;+BAMoBA;;;eAAAA;;;AANpB,IAAIC,6BAA6BC;AAMtB,SAASF,WAAWG,OAAO,EAAEC,GAAG;IACvC,IAAID,SAAS;QACT,wFAAwF;QACxF,IAAIF,4BAA4B;YAC5BA,6BAA6BE;YAC7B;QACJ;QACAF,6BAA6BE;QAC7B,IAAIC,KAAK;YACL,iGAAiG;YACjGA,IAAIC,qBAAqB,CAAC;gBACtBJ,8BAA8BA,2BAA2BK,KAAK;gBAC9D,yEAAyE;gBACzEL,6BAA6BC;YACjC;QACJ;IACJ;AACJ"}